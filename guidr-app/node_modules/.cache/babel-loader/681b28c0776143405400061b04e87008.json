{"ast":null,"code":"import axios from 'axios';\n\nvar jwt_decode = require('jwt-decode');\n\nexport const GET_LOGIN = \"GET_LOGIN\";\nexport const GET_CRED = \"GET_CRED\";\nexport const CREATE_USER = \"CREATE_USER\";\nexport const SET_ID = \"SET_ID\";\nexport const getLogin = credentials => dispatch => {\n  dispatch({\n    type: GET_LOGIN\n  });\n  axios.post(`https://guidr1.herokuapp.com/api/auth/login`, {\n    username: credentials.username,\n    password: credentials.password\n  }).then(res => {\n    console.log(res);\n    let token = jwt_decode(res.data.token);\n    dispatch({\n      type: CREATE_USER,\n      payload: token\n    });\n    console.log(token);\n    localStorage.setItem('token', res.data.token);\n  }).catch(err => console.log('your username or password are inccorect'));\n};\nexport const getCred = credentials => dispatch => {\n  dispatch({\n    type: GET_CRED,\n    payload: credentials\n  });\n};\nexport const createUser = credentials => dispatch => {\n  axios.post('https://guidr1.herokuapp.com/api/auth/register', {\n    username: credentials.username,\n    password: credentials.password\n  }).then(res => {\n    console.log(res);\n    let token = jwt_decode(res.data.token);\n    dispatch({\n      type: CREATE_USER,\n      payload: token\n    });\n    console.log(token);\n    localStorage.setItem('token', res.data.token);\n  });\n};","map":{"version":3,"sources":["C:/Users/Jeremiah/Desktop/Lamda/Front-End/guidr-app/src/Reducer/Actions/index.js"],"names":["axios","jwt_decode","require","GET_LOGIN","GET_CRED","CREATE_USER","SET_ID","getLogin","credentials","dispatch","type","post","username","password","then","res","console","log","token","data","payload","localStorage","setItem","catch","err","getCred","createUser"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AAEP,OAAO,MAAMC,QAAQ,GAAIC,WAAD,IAAiBC,QAAQ,IAAG;AAChDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP;AAAP,GAAD,CAAR;AACAH,EAAAA,KAAK,CACAW,IADL,CACW,6CADX,EACyD;AAACC,IAAAA,QAAQ,EAAEJ,WAAW,CAACI,QAAvB;AAAiCC,IAAAA,QAAQ,EAAEL,WAAW,CAACK;AAAvD,GADzD,EAEKC,IAFL,CAEUC,GAAG,IAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAIG,KAAK,GAAGjB,UAAU,CAACc,GAAG,CAACI,IAAJ,CAASD,KAAV,CAAtB;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,WAAP;AAAoBe,MAAAA,OAAO,EAAEF;AAA7B,KAAD,CAAR;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,GAAG,CAACI,IAAJ,CAASD,KAAvC;AAEH,GATL,EAUKK,KAVL,CAUWC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAY,yCAAZ,CAVlB;AAWH,CAbM;AAeP,OAAO,MAAMQ,OAAO,GAAIjB,WAAD,IAAiBC,QAAQ,IAAG;AAE/CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEN,QAAP;AAAiBgB,IAAAA,OAAO,EAAEZ;AAA1B,GAAD,CAAR;AAGH,CALM;AAOP,OAAO,MAAMkB,UAAU,GAAIlB,WAAD,IAAiBC,QAAQ,IAAG;AAElDT,EAAAA,KAAK,CACAW,IADL,CACU,gDADV,EAC4D;AAACC,IAAAA,QAAQ,EAAEJ,WAAW,CAACI,QAAvB;AAAiCC,IAAAA,QAAQ,EAAEL,WAAW,CAACK;AAAvD,GAD5D,EAEKC,IAFL,CAEUC,GAAG,IAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAIG,KAAK,GAAGjB,UAAU,CAACc,GAAG,CAACI,IAAJ,CAASD,KAAV,CAAtB;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,WAAP;AAAoBe,MAAAA,OAAO,EAAEF;AAA7B,KAAD,CAAR;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,GAAG,CAACI,IAAJ,CAASD,KAAvC;AACH,GARL;AASH,CAXM","sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nvar jwt_decode = require('jwt-decode');\r\n\r\nexport const GET_LOGIN = \"GET_LOGIN\";\r\nexport const GET_CRED = \"GET_CRED\";\r\nexport const CREATE_USER = \"CREATE_USER\";\r\nexport const SET_ID = \"SET_ID\";\r\n\r\nexport const getLogin = (credentials) => dispatch =>{\r\n    dispatch({type: GET_LOGIN});\r\n    axios\r\n        .post(`https://guidr1.herokuapp.com/api/auth/login`, {username: credentials.username, password: credentials.password})\r\n        .then(res =>{\r\n            console.log(res);\r\n            let token = jwt_decode(res.data.token);\r\n            dispatch({type: CREATE_USER, payload: token});\r\n            console.log(token);\r\n            localStorage.setItem('token', res.data.token)\r\n            \r\n        })\r\n        .catch(err => console.log('your username or password are inccorect'))\r\n}\r\n\r\nexport const getCred = (credentials) => dispatch =>{\r\n\r\n    dispatch({type: GET_CRED, payload: credentials});\r\n\r\n\r\n}\r\n\r\nexport const createUser = (credentials) => dispatch =>{\r\n    \r\n    axios\r\n        .post('https://guidr1.herokuapp.com/api/auth/register', {username: credentials.username, password: credentials.password})\r\n        .then(res =>{            \r\n            console.log(res);\r\n            let token = jwt_decode(res.data.token);\r\n            dispatch({type: CREATE_USER, payload: token});\r\n            console.log(token);\r\n            localStorage.setItem('token', res.data.token)\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}